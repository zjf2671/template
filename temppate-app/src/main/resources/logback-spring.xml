<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <include resource="org/springframework/boot/logging/logback/defaults.xml" />
    <include resource="org/springframework/boot/logging/logback/console-appender.xml" />

	<!-- 开发环境 -->
	<springProfile name="dev">
		<!-- 将日志记录到文件中 -->
		 <appender name="fileInfo" class="ch.qos.logback.core.rolling.RollingFileAppender">
	         <filter class="ch.qos.logback.classic.filter.LevelFilter">
		        <!--过滤 Error-->
		        <level>ERROR</level>
		        <!--匹配到就禁止-->
		        <onMatch>DENY</onMatch>
		        <!--没有匹配到就允许-->
		        <onMismatch>ACCEPT</onMismatch>
		    </filter>
	        <File>${LOG_PATH}/info.${LOG_FILE}.log</File>
	        <encoder>
	            <pattern>%date [%level] [%thread] %logger{60} [%file : %line] %msg%n</pattern>
	        </encoder>
	        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
	            <fileNamePattern>${LOG_PATH}daily/info.${LOG_FILE}.%d{yyyy-MM-dd}.log</fileNamePattern>
	            <maxHistory>15</maxHistory> <!-- 保留15天 -->
	            <!--用来指定日志文件的上限大小，那么到了这个值，就会删除旧的日志-->
        		<!--<totalSizeCap>1GB</totalSizeCap>-->
	        </rollingPolicy>
 	   	</appender>
		<appender name="fileErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
	        <!--如果只是想要 Error 级别的日志，那么需要过滤一下，默认是 info 级别的，ThresholdFilter-->
		    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
		        <level>Error</level>
		    </filter>
	        
	        <File>${LOG_PATH}/error.${LOG_FILE}.log</File>
	        <encoder>
	            <pattern>%date [%level] [%thread] %logger{60} [%file : %line] %msg%n</pattern>
	        </encoder>
	        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
	            <fileNamePattern>${LOG_PATH}daily/error.${LOG_FILE}.%d{yyyy-MM-dd}.log</fileNamePattern>
	            <maxHistory>15</maxHistory> <!-- 保留15天 -->
	            <!--用来指定日志文件的上限大小，那么到了这个值，就会删除旧的日志-->
        		<!--<totalSizeCap>1GB</totalSizeCap>-->
	        </rollingPolicy>
 	   	</appender>
	</springProfile>
	
	<!--  测试环境-->
	<springProfile name="test">
		<!-- 将日志记录到文件中 -->
		 <appender name="fileInfo" class="ch.qos.logback.core.rolling.RollingFileAppender">
		   <filter class="ch.qos.logback.classic.filter.LevelFilter">
		        <!--过滤 Error-->
		        <level>ERROR</level>
		        <!--匹配到就禁止-->
		        <onMatch>DENY</onMatch>
		        <!--没有匹配到就允许-->
		        <onMismatch>ACCEPT</onMismatch>
		    </filter>
	        <File>${LOG_PATH}/info.${LOG_FILE}.log</File>
	        <encoder>
	            <pattern>%date [%level] [%thread] %logger{60} [%file : %line] %msg%n</pattern>
	        </encoder>
	        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
	            <fileNamePattern>${LOG_PATH}daily/info.${LOG_FILE}.%d{yyyy-MM-dd}.log</fileNamePattern>
	            <maxHistory>15</maxHistory> <!-- 保留15天 -->
	            <!--用来指定日志文件的上限大小，那么到了这个值，就会删除旧的日志-->
       			 <!--<totalSizeCap>1GB</totalSizeCap>-->
	        </rollingPolicy>
 	   	</appender>
 	   	<appender name="fileErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
	        <!--如果只是想要 Error 级别的日志，那么需要过滤一下，默认是 info 级别的，ThresholdFilter-->
		    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
		        <level>Error</level>
		    </filter>
	        
	        <File>${LOG_PATH}/error.${LOG_FILE}.log</File>
	        <encoder>
	            <pattern>%date [%level] [%thread] %logger{60} [%file : %line] %msg%n</pattern>
	        </encoder>
	        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
	            <fileNamePattern>${LOG_PATH}daily/error.${LOG_FILE}.%d{yyyy-MM-dd}.log</fileNamePattern>
	            <maxHistory>15</maxHistory> <!-- 保留15天 -->
	            <!--用来指定日志文件的上限大小，那么到了这个值，就会删除旧的日志-->
        		<!--<totalSizeCap>1GB</totalSizeCap>-->
	        </rollingPolicy>
 	   	</appender>
	</springProfile>

	<!-- 生产环境 -->
	<springProfile name="prod">
		<!-- 将日志记录到文件中 -->
		 <appender name="fileInfo" class="ch.qos.logback.core.rolling.RollingFileAppender">
		   <filter class="ch.qos.logback.classic.filter.LevelFilter">
		        <!--过滤 Error-->
		        <level>ERROR</level>
		        <!--匹配到就禁止-->
		        <onMatch>DENY</onMatch>
		        <!--没有匹配到就允许-->
		        <onMismatch>ACCEPT</onMismatch>
		    </filter>
	        <File>${LOG_PATH}/info.${LOG_FILE}.log</File>
	        <encoder>
	            <pattern>%date [%level] [%thread] %logger{60} [%file : %line] %msg%n</pattern>
	        </encoder>
	        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
	            <fileNamePattern>${LOG_PATH}daily/info.${LOG_FILE}.%d{yyyy-MM-dd}.log</fileNamePattern>
	            <maxHistory>15</maxHistory> <!-- 保留15天 -->
	            <!--用来指定日志文件的上限大小，那么到了这个值，就会删除旧的日志-->
        		<!--<totalSizeCap>1GB</totalSizeCap>-->
	        </rollingPolicy>
 	   	</appender>
 	   	<appender name="fileErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
	        <!--如果只是想要 Error 级别的日志，那么需要过滤一下，默认是 info 级别的，ThresholdFilter-->
		    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
		        <level>Error</level>
		    </filter>
	        
	        <File>${LOG_PATH}/error.${LOG_FILE}.log</File>
	        <encoder>
	            <pattern>%date [%level] [%thread] %logger{60} [%file : %line] %msg%n</pattern>
	        </encoder>
	        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
	            <fileNamePattern>${LOG_PATH}daily/error.${LOG_FILE}.%d{yyyy-MM-dd}.log</fileNamePattern>
	            <maxHistory>15</maxHistory> <!-- 保留15天 -->
	            <!--用来指定日志文件的上限大小，那么到了这个值，就会删除旧的日志-->
        		<!--<totalSizeCap>1GB</totalSizeCap>-->
	        </rollingPolicy>
 	   	</appender>
	</springProfile>

	<root level="INFO">
		<appender-ref ref="CONSOLE"/>
		<appender-ref ref="fileInfo" />
		<appender-ref ref="fileErrorLog" />
	</root>
</configuration>